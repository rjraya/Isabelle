theory Submission
  imports Defs
begin

program_spec factorial_prog
  assumes "n \<ge> 0" ensures "a = factorial n\<^sub>0"
  defines \<open>
    a = 1;
    i = 1;
    while (i \<le> n)
      @variant\<open>nat undefined\<close>
      @invariant\<open>undefined :: bool\<close>
    {
      a = a * i;
      i = i + 1
    }
  \<close>
  sorry


program_spec fib_prog
  assumes "n \<ge> 0" ensures "a = fib n"
  defines \<open>
    a = 0; b = 1;
    i = 0;
    while (i < n) 
      @variant\<open>nat undefined\<close>
      @invariant\<open>undefined :: bool\<close>   
    {
      c = b;
      b = a + b;
      a = c;
      i = i + 1
    }
  \<close>
  sorry


program_spec fib_prog'
  assumes True ensures "a = fib n\<^sub>0"
  defines \<open>
    a = 0; b = 1;
    i = 0;
    while (i < n) 
      @variant\<open>nat undefined\<close>
      @invariant\<open>undefined :: bool\<close>
    {
      c = b;
      b = a + b;
      a = c;
      i = i + 1
    }
  \<close>
  sorry


fun lhsv :: "com \<Rightarrow> vname set" where
  "lhsv _ = undefined"

theorem wp_strengthen_modset:
  "wp c Q s \<Longrightarrow> wp c (\<lambda>s'. Q s' \<and> (\<forall>x. x\<notin>lhsv c \<longrightarrow> s' x = s x)) s"
  sorry

end